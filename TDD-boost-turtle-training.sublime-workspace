{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"linkin",
				"linking_env_dir"
			],
			[
				"PS_",
				"PS_LFS_VER"
			],
			[
				"BTSOM",
				"BTSOMexe"
			],
			[
				"CMAKE_SYS",
				"CMAKE_SYSTEM_NAME"
			],
			[
				"fol",
				"folder"
			],
			[
				"PS",
				"PS_LFS_VER"
			],
			[
				"asn",
				"asn2c_out_all"
			],
			[
				"cas",
				"casn_out"
			],
			[
				"out",
				"output"
			],
			[
				"code",
				"codeblocks"
			],
			[
				"print",
				"print_supported_configurations"
			],
			[
				"prin",
				"print_supported_configurations"
			],
			[
				"common",
				"common_src"
			],
			[
				"OAM",
				"OAMParams"
			],
			[
				"target",
				"targetagnostic"
			],
			[
				"ASN",
				"ASN_dir"
			],
			[
				"uni",
				"unique_output_dir"
			],
			[
				"addi",
				"additional_includes"
			],
			[
				"pla",
				"platform_sysroot_for_ddal"
			],
			[
				"link",
				"link_directories"
			],
			[
				"CMAKE",
				"CMAKE_COMPILER_IS_GNUCXX"
			],
			[
				"WIn",
				"Windows_x86_64_src"
			],
			[
				"Linu",
				"Linux_x86_64_link_directories"
			],
			[
				"gen",
				"gen_src_dir"
			],
			[
				"Logger",
				"LoggerFactory"
			],
			[
				"cpp",
				"CLockProviderImpl"
			],
			[
				"FM",
				"FM_FaultManagement"
			],
			[
				"else",
				"elseif"
			],
			[
				"need",
				"needed"
			],
			[
				"CMAKE_SY",
				"CMAKE_SYSTEM_PROCESSOR"
			],
			[
				"Dia",
				"Diab_dir"
			],
			[
				"__",
				"__OM_SCT__"
			],
			[
				"COMPILE",
				"COMPILE_FLAGS"
			],
			[
				"inclu",
				"include"
			],
			[
				"defini",
				"definitions"
			],
			[
				"OXF",
				"OXFramework"
			],
			[
				"Bosse",
				"Bosse_Mw"
			],
			[
				"include",
				"include_directories"
			],
			[
				"add",
				"add_definitions"
			],
			[
				"Mod",
				"ModuleName"
			],
			[
				"tart",
				"target_link_libraries"
			],
			[
				"SSW",
				"SSW_SupportSoftware"
			],
			[
				"in",
				"inc	#include \"…\""
			],
			[
				"Rhaps",
				"Rhapsody_cmake_included"
			],
			[
				"name",
				"names"
			],
			[
				"ose",
				"ose4"
			],
			[
				"OS",
				"OSE5"
			],
			[
				"CMAKE_C",
				"CMAKE_COMPILER"
			],
			[
				"WCD",
				"WCDMA"
			],
			[
				"X86",
				"X86-64_definitions"
			],
			[
				"gen_",
				"gen_code_dir"
			],
			[
				"rhaps",
				"rhapsody_output_files"
			],
			[
				"Windo",
				"Windows_definitions"
			],
			[
				"Timi",
				"TimingModel"
			],
			[
				"Win",
				"Windows_includes"
			],
			[
				"Service",
				"ServiceImpl"
			],
			[
				"gener",
				"generate_casn"
			],
			[
				"CM",
				"CMake"
			],
			[
				"Reco",
				"RecoverySynchronization"
			],
			[
				"src",
				"src/static/FSMr3"
			],
			[
				"static",
				"src/static/FSMr2"
			],
			[
				"Rel3",
				"Rel3_includes"
			],
			[
				"sr",
				"src/fsm2"
			],
			[
				"CMA",
				"CMAKE_SYSTEM_PROCESSOR"
			],
			[
				"C_",
				"C_Application/	Dir"
			],
			[
				"worksp",
				"workspace/	Dir"
			],
			[
				"OM",
				"OM_REUSABLE_STATECHART_IMPLEMENTATION"
			],
			[
				"DM_",
				"DM_Common"
			],
			[
				"RP3Con",
				"RP3Configuration"
			],
			[
				"WIN",
				"WIN32"
			],
			[
				"cmake",
				"cmake_minimum_required"
			],
			[
				"data",
				"databaseValues"
			],
			[
				"Get",
				"GetAttributesTransaction"
			],
			[
				"actual",
				"actualCall"
			],
			[
				"DBRe",
				"DBResultSet::get_objects"
			],
			[
				"RE",
				"REGEXP"
			],
			[
				"ignore",
				"ignoreOtherCalls"
			],
			[
				"getIn",
				"getIntValue"
			],
			[
				"actua",
				"actualCall"
			],
			[
				"db",
				"db_object"
			],
			[
				"expe",
				"expectOneCall"
			],
			[
				"Cpp",
				"CppUTestExt/MockSupport"
			],
			[
				"WCDMA",
				"WCDMA_dir"
			],
			[
				"actu",
				"actualCall"
			],
			[
				"S",
				"SSW_dir"
			],
			[
				"time",
				"timeout"
			],
			[
				"setT",
				"setTimeoutId"
			],
			[
				"tim",
				"timeout"
			],
			[
				"ent",
				"enterState"
			],
			[
				"stop",
				"stopRequest"
			],
			[
				"CppUTest",
				"CppUTestExt/MockSupport"
			],
			[
				"send",
				"sendReport"
			],
			[
				"exi",
				"exitState"
			],
			[
				"TEST_",
				"TEST_If::Responses::evCabTestCompleted"
			],
			[
				"return",
				"returnValue"
			],
			[
				"take",
				"takeEvent"
			],
			[
				"Run",
				"RunTests"
			],
			[
				"end",
				"endTest"
			],
			[
				"Start",
				"StartTest"
			],
			[
				"TEST",
				"TEST_If::Requests"
			],
			[
				"Cabinet",
				"CabinetTests"
			],
			[
				"CR",
				"CRouter"
			],
			[
				"retur",
				"returnValue"
			],
			[
				"ret",
				"returnValue"
			],
			[
				"with",
				"withParameter"
			],
			[
				"DB",
				"DBObject"
			],
			[
				"get",
				"getObjectPointer"
			],
			[
				"Cabin",
				"CabinetTest_shall"
			],
			[
				"mPa",
				"mPackAmount"
			],
			[
				"expect",
				"expectOneCall"
			],
			[
				"Send",
				"SendAndReceiveEvents"
			],
			[
				"met",
				"method"
			],
			[
				"cal",
				"called"
			],
			[
				"qu",
				"question"
			],
			[
				"eac",
				"each"
			],
			[
				"qui",
				"quiz_json"
			],
			[
				"File",
				"File	File.read(\"..\")"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "cmake_minimum_required (VERSION 2.8)\nproject (exampleproblem)\n\nset(Boost_USE_MULTITHREAD ON) #set a flag\nset(Boost_USE_STATIC_LIBS OFF)\nfind_package(Boost COMPONENTS thread unit_test_framework REQUIRED)\ninclude_directories(${INCLUDE_DIRECTORIES} ${Boost_INCLUDE_DIRS})\nlink_directories(${LINK_DIRECTORIES} ${Boost_LIBRARY_DIRS})\n\nget_filename_component(MY_ROOT ./ ABSOLUTE)\n\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${MY_ROOT}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${MY_ROOT}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${MY_ROOT}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${MY_ROOT}/bin)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${MY_ROOT}/bin)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MY_ROOT}/bin)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${MY_ROOT}/lib)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${MY_ROOT}/lib)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MY_ROOT}/lib)\n\nadd_library (\n    ${PROJECT_NAME}    \n    main.cpp\n)",
			"file": "exampleproblem/CMakeLists.txt",
			"file_size": 933,
			"file_write_time": 1366192546000000,
			"settings":
			{
				"buffer_size": 929,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 292.0,
		"selected_items":
		[
			[
				"previ",
				"Markdown Preview: preview in Browser"
			],
			[
				"previe",
				"Markdown Preview: preview in Browser"
			],
			[
				"log",
				"SVN: (File) Log"
			],
			[
				"comm",
				"SVN: (File) Commit"
			],
			[
				"revert",
				"SVN: (File) Revert"
			],
			[
				"commi",
				"SVN: (File) Commit"
			],
			[
				"svncom",
				"SVN: (File) Commit"
			],
			[
				"commt",
				"SVN: (File) Commit"
			],
			[
				"add",
				"SVN: (File) Add"
			],
			[
				"rever",
				"SVN: (File) Revert"
			],
			[
				"svnadd",
				"SVN: (Folder) Add"
			],
			[
				"gitche",
				"Git: Checkout Current File"
			],
			[
				"check",
				"Git: Checkout Current File"
			],
			[
				"pr",
				"Markdown Preview: preview in Browser"
			],
			[
				"svndi",
				"SVN: (File) Diff"
			],
			[
				"commit",
				"SVN: (File) Commit"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"up",
				"SVN: Update, Including Externals"
			],
			[
				"update",
				"SVN: Update"
			],
			[
				"svn",
				"Preferences: SVN Settings"
			],
			[
				"gitqui",
				"Git: Quick Commit"
			],
			[
				"diff",
				"SVN: (File) Diff"
			],
			[
				"upda",
				"SVN: (File) Update"
			],
			[
				"svnfi",
				"SVN: (File) Commit"
			],
			[
				"pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"filecom",
				"SVN: (File) Commit"
			],
			[
				"com",
				"SVN: (File) Commit"
			],
			[
				"preview",
				"Markdown Preview: preview in Browser"
			],
			[
				"prei",
				"Markdown Preview: preview in Browser"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"pdf",
				"Pandoc: Render Markdown to PDF"
			],
			[
				"pand",
				"Pandoc: Render Markdown to PDF"
			],
			[
				"pan",
				"Pandoc: Render Markdown to temp PDF and View"
			],
			[
				"mark",
				"Pandoc: Render Markdown to HTML"
			],
			[
				"markd",
				"Pandoc: Render Markdown to PDF"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"dele",
				"SVN: (File) Delete"
			],
			[
				"ad",
				"SVN: (File) Add"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"previw",
				"Markdown Preview: preview in Browser"
			],
			[
				"cheat",
				"Markdown Preview: open Markdown Cheat sheet"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"gitcomm",
				"Git: Commit"
			],
			[
				"gitcom",
				"Git: Quick Commit"
			],
			[
				"gita",
				"Git: Add Current File"
			],
			[
				"gitadd",
				"Git: Add Current File"
			],
			[
				"gitdiff",
				"Git: Diff Current File"
			],
			[
				"svn di",
				"SVN: Diff"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"svncomm",
				"SVN: (File) Commit"
			],
			[
				"git",
				"Git: Add Current File"
			],
			[
				"svn com",
				"SVN: Commit…"
			],
			[
				"svn sta",
				"SVN: Status"
			],
			[
				"svnco",
				"SVN: (File) Commit"
			],
			[
				"gitad",
				"Git: Add Current File"
			],
			[
				"svno",
				"SVN: Commit…"
			],
			[
				"set",
				"Set Syntax: Makefile"
			],
			[
				"clos",
				"Project: Close"
			],
			[
				"setmake",
				"Set Syntax: Makefile"
			],
			[
				"setma",
				"Set Syntax: Makefile"
			],
			[
				"setsmak",
				"Set Syntax: Makefile"
			],
			[
				"SIM",
				"Build: SIM"
			],
			[
				"sim",
				"Build: SIM"
			],
			[
				"can",
				"Build: Cancel"
			],
			[
				"fas",
				"Build: fast build"
			],
			[
				"fast",
				"Build: fast build"
			],
			[
				"fa",
				"Build: fast build"
			],
			[
				"git ad",
				"Git: Add Current File"
			],
			[
				"git ",
				"Git: Add Current File"
			],
			[
				"gitchec",
				"Git: Checkout Current File"
			],
			[
				"clean",
				"Build: Clean"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"ca",
				"Build: Cancel"
			],
			[
				"canc",
				"Build: Cancel"
			],
			[
				"gi",
				"Git: Add Current File"
			],
			[
				"insa",
				"Package Control: Install Package"
			],
			[
				"bow",
				"Preferences: Browse Packages"
			],
			[
				"git sta",
				"Git: Stash Changes"
			],
			[
				"git che",
				"Git: Stash Changes"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"clea",
				"Build: Clean"
			],
			[
				"make",
				"Build: make all"
			],
			[
				"make cl",
				"Build: make clean"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"confi",
				"Build: Configure project for Unix Makefiles"
			],
			[
				"conf",
				"Build: Configure project for Unix Makefiles"
			],
			[
				"conif",
				"Build: Configure project for Unix Makefiles"
			],
			[
				"configu",
				"Build: Configure project for Unix Makefiles"
			],
			[
				"con",
				"Build: Configure project for Unix Makefiles"
			],
			[
				"",
				"About"
			],
			[
				"svn add",
				"SVN: (File) Add"
			],
			[
				"svn a",
				"SVN: (File) Add"
			],
			[
				"close",
				"File: Close All"
			],
			[
				"test",
				"Build: make test"
			],
			[
				"svn del",
				"SVN: (File) Delete"
			],
			[
				"svn dele",
				"SVN: (File) Delete"
			],
			[
				"svn ",
				"SVN: (File) Add"
			],
			[
				"rebuil",
				"Build: Rebuild cache"
			],
			[
				"svn rev",
				"SVN: (File) Revert"
			],
			[
				"delete",
				"SVN: (File) Delete"
			],
			[
				"cover",
				"Build: make coverage"
			],
			[
				"reve",
				"SVN: (File) Revert"
			],
			[
				"coverage",
				"Build: make coverage"
			],
			[
				"covera",
				"Build: make coverage"
			],
			[
				"crash",
				"Build: Crash Back Trace"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"cle",
				"Build: make clean"
			],
			[
				"cras",
				"Build: Crash Back Trace"
			],
			[
				"reove",
				"Package Control: Remove Package"
			],
			[
				"lint",
				"Preferences: SublimeLint – Default"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"SublimeGDB: Start Debugging"
			],
			[
				"cra",
				"Build: Crash Back Trace"
			],
			[
				"tes",
				"Build: make test"
			],
			[
				"te",
				"Build: make test"
			],
			[
				"conti",
				"SublimeGDB: Continue"
			],
			[
				"stop",
				"SublimeGDB: Stop Debugging"
			],
			[
				"gdb",
				"SublimeGDB: Stop Debugging"
			],
			[
				"start",
				"SublimeGDB: Start Debugging"
			],
			[
				"default",
				"Preferences: SublimeGDB Settings – Default"
			],
			[
				"ctags",
				"CTags: Show Symbols (all)"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 132.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/var/git/WCDMA/C_Application/SC_OAM/FoundationModel/FoundationModel_rpy/Generic_If_Pkg.sbs",
		"/var/git/WCDMA/C_Application/SC_OAM/CLIC_ClimateControl/CLIC_ClimateControl_rpy/CLIC_FSM2/CLIC_FSM2.sbs",
		"/var/git/WCDMA/C_Application/SC_OAM/FoundationModel/FoundationModel_rpy/FoundationModel.sbs",
		"/home/skoblins/.config/sublime-text-2/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/var/git/WCDMA/.gitignore",
		"/var/git/WCDMA/C_Application/SC_OAM/configure",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/mingw-gcc-x86_64.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src/oxf/OMSelfLinkedMemoryAllocator.h",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src/oxf/rawtypes.h",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/Linking.cmake",
		"/var/git/WCDMA/C_Test/SC_OAM/FM_FaultManagement/NEW_UT/CMake/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/Makefiles/Linking.mak",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/ose-diab-ppc.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/Definitions.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/FoundationModel/src/LinuxPPC_WN_FSPB/FORE_FDU_If_Pkg.cpp",
		"/var/git/linking-env/Makefile",
		"/var/git/linking-env/D_Build/Make/FCMD_FSPC_Link.mak",
		"/var/git/WCDMA/C_Application/SC_OAM/Makefiles/DeliveryLibs.in",
		"/var/git/WCDMA/C_Application/SC_OAM/TM_TestManagement/TM_TestManagement_rpy/ALMAGTest.cls",
		"/var/git/WCDMA/C_Test/SC_OAM/TM_TestManagement/UT/Cabinet/CabinetTest_shall.cpp",
		"/var/git/WCDMA/C_Application/SC_OAM/TM_TestManagement/TM_TestManagement_rpy/CabinetTest.cls",
		"/var/git/WCDMA/C_Application/SC_OAM/__OM_SCT__/src/static/__OM_SCT__.cpp",
		"/var/git/WCDMA/C_Application/SC_OAM/BBC_BasebandBusConfiguration/src/LinuxX86-64_WN_FCT/FR.cpp",
		"/tmp/sublime-svn-1365673983/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/ExternalTools/Rhapsody.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/DM_FSM/src/LinuxMIPS_WN_FCT/BTSOM_main.cpp",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/Deployment.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/SWM_SoftwareManagement/SWM_SoftwareManagement_rpy/FSMr3/FCM_Master_Functions.sbs",
		"/var/git/WCDMA/C_Application/SC_OAM/SWM_SoftwareManagement/src/include/SWM_SoftwareManagement/DbFacade.h",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/new-mips",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/old-mips",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/IncludeDirectories.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/linux-gcc-x86_64-scm.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/linux-gcc-mips.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/linux-gcc-mips-scm.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/C_Test/C_Test.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/configure.bat",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/README.md",
		"/tmp/sublime-svn-1365606181/SVN",
		"/tmp/sublime-svn-1365600972/SVN",
		"/tmp/sublime-svn-1365600314/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/output-FCT-mips-Linux/CMakeFiles/OAM.dir/link.txt",
		"/tmp/sublime-svn-1365598514/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/linux-gcc-x86_64.cmake",
		"/var/git/WCDMA/C_Test/SC_OAM/MT_COMMONS/original_boost_mt_core/CMake/SSW/SSW_WORKAROUND/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/OAM.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/ose-diab-ppc-scm.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/ExternalTools/rhapsodyStub.cpp",
		"/tmp/sublime-svn-1365494552/SVN",
		"/tmp/sublime-svn-1365494120/SVN",
		"/var/git/WCDMA/C_Test/SC_OAM/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/conf/PS_LFS_VER.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/tools/casn/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/CMake/GeneratedFiles.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/output-FCMD-ppc-OSE/CMakeCache.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src/oxf/OMTimeout.h",
		"/home/skoblins/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/var/git/WCDMA/C_Application/SC_OAM/include/definitions/FaultLiteralArray.ipp",
		"/tmp/sublime-svn-1365429917/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/CLIC_ClimateControl/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/SWM_SoftwareManagement/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/DM_ALMAG/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/DM_Common/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/DM_FSM/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/DM_RPMAG/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/FM_FaultManagement/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/FoundationModel/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/HWM_HardwareManagement/CMakeLists.txt",
		"/tmp/sublime-svn-1365420236/SVN",
		"/tmp/sublime-svn-1365417912/SVN",
		"/tmp/sublime-svn-1365417892/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/SYSM_WCDMA/CMakeLists.txt",
		"/tmp/sublime-svn-1365176093/SVN",
		"/tmp/sublime-svn-1365172499/SVN",
		"/tmp/sublime-svn-1365170068/SVN",
		"/tmp/sublime-svn-1365170043/SVN",
		"/tmp/sublime-svn-1365169733/SVN",
		"/home/skoblins/tools/windows-compilation-server.sh",
		"/tmp/sublime-svn-1365163182/SVN",
		"/tmp/sublime-svn-1365163083/SVN",
		"/var/git/WCDMA/svn-co-cmakes",
		"/var/git/WCDMA/C_Application/svn-commit.2.tmp",
		"/home/skoblins/.config/sublime-text-2/Packages/SVN/SVN.sublime-settings",
		"/var/git/WCDMA/C_Test/SC_OAM/UT_COMMONS/jenkins.sh",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/MemoryProtection/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/CMake/Paths.cmake",
		"/var/git/WCDMA/C_Application/SC_OAM/SYSM_SystemManagement/CMakeLists.txt",
		"/var/git/WCDMA/C_Application/SC_OAM/Makefiles/SDK.in",
		"/var/git/WCDMA/C_Test/SC_OAM/CLIC_ClimateControl/MT_FSMr3/test_cases/FSMr3/UT/CTempSensorTests.cpp",
		"/tmp/sublime-svn-1365147799/SVN",
		"/tmp/sublime-svn-1365081273/SVN",
		"/tmp/sublime-svn-1365074994/SVN",
		"/tmp/sublime-svn-1365074908/SVN",
		"/var/git/WCDMA-ppc-gcc/C_Application/SC_OAM/new-build-system.log",
		"/var/git/WCDMA-ppc-gcc/C_Application/SC_OAM/old-build-system.log",
		"/var/git/WCDMA/C_Test/SC_OAM/CLIC_ClimateControl/MT_FSMr3/README/README.txt",
		"/tmp/sublime-svn-1364481955/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/output/CMakeCache.txt",
		"/home/skoblins/home/skoblins/Downloads/NOSI/key2.pem",
		"/home/skoblins/NOSI.wpa",
		"/tmp/sublime-svn-1364474287/SVN",
		"/home/skoblins/Downloads/NOSI/key2.pem",
		"/home/skoblins/tools/bosse.sh",
		"/var/git/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/src/Cpsb.c",
		"/opt/diab/linux/ix86/diab_5.3.2/diab/5.3.2.0/include/diab/stddef.h",
		"/var/git/WCDMA/C_Application/SC_OAM/setenv.env",
		"/var/git/WCDMA/C_Application/SC_OAM/enmake.bat",
		"/var/git/WCDMA/C_Application/SC_OAM/BBC_BasebandBusConfiguration/CMakeLists.txt",
		"/tmp/sublime-svn-1363863189/SVN",
		"/tmp/sublime-svn-1363862617/SVN",
		"/var/git/WCDMA/C_Application/SC_OAM/BBC_BasebandBusConfiguration/src/LinuxMIPS_WN_FCT/MurkkuConf.h",
		"/var/git/WCDMA/C_Application/SC_OAM/BBC_BasebandBusConfiguration/BBC_BasebandBusConfiguration_rpy/FSMr2/BBC_pkg.sbs",
		"/tmp/sublime-svn-1363700861/SVN",
		"/tmp/sublime-svn-1363271345/SVN",
		"/tmp/sublime-svn-1363271299/SVN",
		"/tmp/sublime-svn-1363271034/SVN",
		"/tmp/midori-skoblins/2045884125UQOYTW.html",
		"/tmp/sublime-svn-1363269904/SVN",
		"/tmp/sublime-svn-1363269452/SVN",
		"/tmp/sublime-svn-1363269312/SVN",
		"/tmp/sublime-svn-1363266137/SVN",
		"/tmp/sublime-svn-1363254214/SVN",
		"/home/skoblins/.config/sublime-text-2/Packages/Markdown Preview/README.md",
		"/tmp/sublime-svn-1363252756/SVN"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"*.cls,*.sbs,*.rpy",
			"*.cls",
			"*.rpy",
			"*.sbs",
			"Makefile,*.mak,*.in",
			"*.sbs",
			"*.cls",
			"*.h,*.hpp,*.cpp,/var/git/WCDMA/C_Test/SC_OAM",
			"*.mak,Makefile,*.in",
			"*.h,*.hpp,/var/git/WCDMA/C_Test/SC_OAM",
			"*.mak,Makefile,*.in",
			"*.txt,*.cmake",
			"*.mak,Makefile,*.in",
			"*.txt,*.cmake",
			"*.h,*.hpp,*.cpp,/var/git/WCDMA/C_Test/SC_OAM",
			"*.h,*.hpp,*.cpp,/var/git/WCDMA/C_Test/SC_OAM/BBC_BasebandBusConfiguration",
			"*.txt,*.cmake",
			"*.h,*.hpp",
			"*.c,*.cc,*.cpp",
			"*.txt,*.cmake",
			"*.c,*.cc,*.cpp",
			"*.c",
			"*.cpp",
			"*.txt,*.cmake",
			"*.cpp",
			"*.h",
			"*.hpp",
			"*.cpp",
			"*.txt,*.cmake",
			"*.mak,Makefile,*.in",
			"*.cpp",
			"*.h,*.cpp",
			"*.h",
			"*.cpp",
			"*.txt,*.cmake",
			"/var/git/cmake_build_system_development/C_Application/SC_OAM/output-diab",
			"*.txt,*.cmake",
			"*.cpp",
			"*.txt,*.cmake",
			"*.h",
			"*.mak,Makefile,*.in",
			"*.cpp",
			"*.txt,*.cmake",
			"*.mak,Makefile,*.in",
			"*.h",
			"*.mak,Makefile,*.in",
			"*.mak;Makefile;*.in",
			"*.h",
			"*.cpp",
			"*.c",
			"*.h",
			"*.mak,*.in,Makefile",
			"*.mak,*.in",
			"*.cmake,*.txt",
			"/var/git/cmake_build_system_development/C_Application/SC_OAM/Makefiles",
			"/var/git/cmake_build_system_development/C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric",
			"*.cmake,*.txt",
			"LinuxX86-64_WN_FCT/*.cpp",
			"LinuxX86-64_WN_FCMD/*.cpp",
			"LinuxX86-64_WN_FCMD/*.cpp,",
			"*.cpp",
			"*.h",
			"*.cpp,*.h",
			"*.txt, *.cmake, *.in, *.mak, Makefile",
			"*.txt, *.cmake, *.in, *.mak",
			"*.txt, *.cmake, *.in",
			"*.txt, *.cmake",
			"*.cpp,*.h",
			"*.txt,*.cmake,/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/SIM_SystemInterfaceManagement",
			"*.txt,/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/SIM_SystemInterfaceManagement",
			"*.txt,/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/SIM_SystemInterfaceManagement/src",
			"*.cpp",
			"*.tcpp",
			"*.txt, *.cmake",
			"",
			"*.h",
			"*.txt,*.cmake",
			"/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/output/CMakeFiles",
			"*.txt",
			"*.h",
			"*.h,/home/skoblins/workspace/WCDMA/I_Interface",
			"*.h",
			"*.h,/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/HWM_HardwareManagement/src/LinuxX86_WN_FCT",
			"*.h",
			"*.txt",
			"*.cmake",
			"*.txt",
			"*.cmake",
			"*.in,Makefile",
			"*.cmake",
			",/home/skoblins/workspace/WCDMA/C_Test/TestDoubles/C_Application/SC_OAM/FoundationModel",
			"*.h,/home/skoblins/workspace/WCDMA/C_Test/TestDoubles/C_Application/SC_OAM/FoundationModel",
			"*.h,/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/FoundationModel/src",
			",*.h,/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src",
			"*.h",
			"*.cpp",
			"*.h",
			"*.cpp",
			"*.h",
			"*.cpp",
			"/home/skoblins/workspace/CppUTest",
			"*.cpp",
			"/home/skoblins/workspace/CppUTest,*.cpp,*.h",
			"/home/skoblins/workspace/CppUTest,*.cpp",
			"/home/skoblins/workspace/CppUTest",
			"/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/TM_TestManagement/src/",
			"/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/TM_TestManagement/src/,.*cpp",
			"/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/TM_TestManagement/src/.*cpp",
			"*.cpp",
			"*.h,-/MT",
			"*.h",
			"/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src",
			"*.h",
			"*.cpp",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\\n",
			"./",
			"ImplementationFooter",
			"ImplementationHeader",
			"/*********************************",
			"package_name",
			"scode",
			"linking_env_dir",
			"linking_env_repo",
			"\\n",
			"./",
			"lib(\\w+)\\.a",
			"                    ",
			"  ",
			"https",
			"SSW_SupportSoftware/src/",
			"\\n",
			"./",
			"DeliveryLibs.in",
			"FILES_FCMD1",
			"linking",
			"nbrOfReceivedMessages",
			"nbrOfSentMessagesDL",
			"if(params->nbrOfSentMessagesDL",
			"nbrOfSentMessagesUL",
			"if(params",
			"if(params-",
			"if(params->nbrOfSentMessages",
			"if(params",
			"if (params->nbrOfSentMessages",
			"if( params->nbrOfSentMessages",
			"if(params->nbrOfSentMessages",
			"if(",
			".lib",
			" ",
			".a",
			" \\n",
			"  \\n",
			" ",
			"\\s\\s+",
			"\\n",
			" \\n",
			".lib",
			"/NODEFAULTLIB:",
			"OM_NO_TYPENAME_SUPPORT",
			"OSE_DELTA",
			"dynamic",
			"rdynamic",
			"SSW_BOOST_SP_ENABLE_THREADS",
			"WINSOCK",
			"message",
			"call_toolchain_cmake",
			"is_testing_enabled",
			"IS_TESTING_ENABLED",
			"is_testing_enabled",
			"TESTING",
			"CMakeCache.txt",
			"octeon",
			")\n",
			"COMMENT",
			"FILES_FCMD1",
			"DeliveryLibs.in",
			"prepare_out_dir",
			"toolchain_files",
			"CROSSCOMPILING",
			"(            )(\\w)",
			"_",
			"=.*",
			"_=.*",
			"verbose",
			"main",
			"http",
			"/opt/diab/linux/ix86/diab_5.3.2/diab/5.3.2.0/include/diab",
			"FCMD_defi",
			"FSPB_defi",
			"FSPB_include",
			"FCMD_include",
			"FCMD_",
			"file",
			"-",
			"NEW_MT",
			"NEW_UT",
			"CppUTest",
			"Boost",
			"Turtle",
			"Boost",
			"access",
			"wrlinb",
			".",
			"[^\\\\]_",
			"CMake",
			"##",
			"#",
			"MOCK_(CLASS|BASE)",
			"MOCK_",
			"DAASOCKET_BSD_STACK",
			"LinuxPPC_WN",
			"MAP_FILE",
			"FSPB",
			"WN_APP_ENV_INCLUDES",
			"FSPB",
			"LinuxMIPS_WN_F",
			"WN_FSPB",
			"FSPB",
			"FCT",
			"FCMD",
			"FSPB",
			"_CFG",
			"platform_sysroot_for_ddal",
			"ddal",
			"activeTargets",
			"GCC_SYSROOT",
			"octeon2",
			"get_board_name",
			"gzclose",
			"ddal_",
			"ddal.h",
			"_LIBS",
			"TARGET_DEFINES",
			"gcc",
			"get_board_name",
			"TcomProxyFactory::TcomProxyFactory",
			"set_property",
			"LoggerTarget",
			"osFactory",
			"prepareCalibrationFeedback",
			"OperationFeedback::prepareCalibrationFeedback",
			"LoadCycle"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			" ",
			"",
			"deployment_package_name",
			"deployment_scode",
			"deployment_linking_env_dir",
			"deployment_linking_env_rep",
			" ",
			"",
			" \\1/lib\\1.a",
			" ",
			"",
			"\\n",
			"",
			"\\n",
			" \\n",
			" ",
			"",
			".a",
			"",
			"cmake_ide_aware",
			"ENABLE_TESTING",
			"IS_TESTING_ENABLED",
			"prepare_cmake_dir",
			"toolchain_file",
			" echo \"    ",
			" ",
			"",
			"1.",
			"NEW\\\\_MT",
			"NEW\\\\_UT",
			"NEW\\_UT",
			"_CppUTest_",
			"_Boost_",
			"_Turtle_",
			"",
			"\\_",
			"_CMake_",
			"###",
			"##",
			"FSPB",
			"_rhapcmp",
			"platform_sysroot",
			"cp",
			"/var/git/WCDMA",
			"-u",
			"/",
			"copy /var/git",
			"${OAM_dir}/",
			"${OAM_dir}",
			"cmake_compiler",
			"${CMAKE_PROJECT_NAME}",
			"",
			"message(STATUS ",
			"/Y",
			"\\",
			"COPY I:\\\\cmake_build_system_development\\\\\\1 C:\\\\build_system\\\\\\1 /Y",
			"COPY I:\\\\cmake_build_system_development\\\\\\1 C:\\\\build_system\\\\1 /Y",
			"COPY I:\\cmake_build_system_development\\\\\\1 C:\\build_system\\\\\\1",
			"COPY I:\\cmake_build_system_development\\\\1 C:\\build_system\\\\1",
			"/${unique_output_dir}",
			"",
			"_rhapcfg",
			"/output_${out_extension}",
			"x86_64",
			"ppc",
			"#",
			"_flags",
			"/D",
			"/Z7",
			"/Uhnd/",
			"/ADSER/",
			"/Common/",
			"/AppContext/",
			"/Master/",
			"/DomainsService/",
			"/Unit/",
			"/",
			"oxf/OMObsolete.h",
			"Windows",
			"#ifdef WIN32",
			"defined (LINUX) && defined (REL3) && defined (TARGET_COMPILATION)",
			"WIN32",
			"defined (LINUX) && defined (REL3) && defined (TARGET_COMPILATION)",
			"WIN32",
			"!defined (HOST_COMPILATION) && defined (REL3)",
			")",
			"(",
			"|",
			"*",
			"_",
			"WIN32",
			"!defined (HOST_COMPILATION) && defined (REL3)",
			"defined (HOST_COMPILATION) && defined (REL3)",
			"(HOST_COMPILATION) && defined (REL3)",
			"${gen_src_dir}",
			"${gen_src_dir}/",
			"${gen_src_dir}",
			"",
			"expectNCalls(how_many_times_is_getFRIdFromCoreFRId_invoked, ",
			"",
			"proof_of_concept",
			"filenames",
			"FML",
			"",
			"\\1{}",
			"",
			"\\1{}",
			"void TEST",
			"\\1{}",
			"",
			"CabinetDataProvider_shall",
			"\\1<\\2>",
			"",
			"\\1<\\2>",
			"oxf/",
			"\\n\\t",
			"\\t\\n",
			"src/oxf\\1",
			"test_done",
			"",
			"\\1{}",
			"\\1~\\2",
			"\\1\\2",
			"mock(\"FML\")",
			"\\1 \\2\\3return \\(\\1\\) mock().actualCall(\"\\2\").getValue.getValue();\\n}",
			"\\1 \\2\\3return (\\1) mock().actualCall(\"\\2\").getValue.getValue();\\n}",
			"\\1 \\2\\3\\nreturn (\\1) mock().actualCall(\"\\2\").getValue.getValue();",
			"}\\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "exampleproblem/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 929,
						"regions":
						{
						},
						"selection":
						[
							[
								431,
								431
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 316.0
	},
	"output.find_results":
	{
		"height": 244.0
	},
	"output.git":
	{
		"height": 114.0
	},
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"readme",
				"WCDMA/C_Application/SC_OAM/CMake/README.md"
			],
			[
				"linking",
				"WCDMA/C_Application/SC_OAM/CMake/Linking.cmake"
			],
			[
				".giti",
				"WCDMA/.gitignore"
			],
			[
				"readme.md",
				"WCDMA/C_Application/SC_OAM/CMake/README.md"
			],
			[
				"ose-",
				"WCDMA/C_Application/SC_OAM/CMake/ose-diab-ppc-scm.cmake"
			],
			[
				"deploy",
				"WCDMA/C_Application/SC_OAM/CMake/Deployment.cmake"
			],
			[
				"deliverylibs.in",
				"linking-env/C_Application/SC_OAM/Make/DeliveryLibs.in"
			],
			[
				"deliverylib",
				"WCDMA/C_Application/SC_OAM/Makefiles/DeliveryLibs.in"
			],
			[
				"fcmd_fspc_link.mak",
				"linking-env/D_Build/Make/FCMD_FSPC_Link.mak"
			],
			[
				"d_build/make/fcmd_fspc_link.mak",
				"linking-env/D_Build/Make/FCMD_FSPC_Link.mak"
			],
			[
				"linuxppc_wn_fspb/fore_fdu_if_pkg.cpp",
				"C_Application/SC_OAM/FoundationModel/src/LinuxPPC_WN_FSPB/FORE_FDU_If_Pkg.cpp"
			],
			[
				"cabinettest",
				"C_Application/SC_OAM/TM_TestManagement/TM_TestManagement_rpy/CabinetTest.cls"
			],
			[
				"almag",
				"C_Application/SC_OAM/TM_TestManagement/TM_TestManagement_rpy/ALMAGTest.cls"
			],
			[
				"testshall",
				"C_Test/SC_OAM/TM_TestManagement/UT/Cabinet/CabinetTest_shall.cpp"
			],
			[
				".cpp",
				"C_Application/SC_OAM/BBC_BasebandBusConfiguration/src/LinuxX86-64_WN_FCT/FR.cpp"
			],
			[
				"defini",
				"C_Application/SC_OAM/CMake/Definitions.cmake"
			],
			[
				"link",
				"C_Application/SC_OAM/CMake/Linking.cmake"
			],
			[
				"diab",
				"C_Application/SC_OAM/CMake/ose-diab-ppc.cmake"
			],
			[
				"linking.mak",
				"C_Application/SC_OAM/Makefiles/Linking.mak"
			],
			[
				"fm_faultmanagcmakeli",
				"C_Test/SC_OAM/FM_FaultManagement/NEW_UT/CMake/CMakeLists.txt"
			],
			[
				"rhapso",
				"C_Application/SC_OAM/CMake/ExternalTools/Rhapsody.cmake"
			],
			[
				"mingw",
				"C_Application/SC_OAM/CMake/mingw-gcc-x86_64.cmake"
			],
			[
				"definition",
				"C_Application/SC_OAM/CMake/Definitions.cmake"
			],
			[
				"omself",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src/oxf/OMSelfLinkedMemoryAllocator.h"
			],
			[
				"cmakelis",
				"C_Application/SC_OAM/CMakeLists.txt"
			],
			[
				"ming",
				"C_Application/SC_OAM/CMake/mingw-gcc-x86_64.cmake"
			],
			[
				"confi",
				"C_Application/SC_OAM/configure"
			],
			[
				"readm",
				"C_Application/SC_OAM/CMake/README.md"
			],
			[
				"deply",
				"C_Application/SC_OAM/CMake/Deployment.cmake"
			],
			[
				"cmakeli",
				"C_Application/SC_OAM/CMakeLists.txt"
			],
			[
				"linkin",
				"C_Application/SC_OAM/CMake/Linking.cmake"
			],
			[
				"btsom_main.cpp",
				"C_Application/SC_OAM/DM_FSM/src/LinuxMIPS_WN_FCT/BTSOM_main.cpp"
			],
			[
				"linkink",
				"C_Application/SC_OAM/CMake/Linking.cmake"
			],
			[
				"linking.",
				"C_Application/SC_OAM/Makefiles/Linking.mak"
			],
			[
				"configure.bat",
				"C_Application/SC_OAM/configure.bat"
			],
			[
				"deplo",
				"C_Application/SC_OAM/CMake/Deployment.cmake"
			],
			[
				"definiti",
				"/var/git/WCDMA/C_Application/SC_OAM/CMake/Definitions.cmake"
			],
			[
				"configure",
				"C_Application/SC_OAM/configure"
			],
			[
				"swm_softwaremanagement_rpy/fsmr3/fcm_master_functions.sbs",
				"C_Application/SC_OAM/SWM_SoftwareManagement/SWM_SoftwareManagement_rpy/FSMr3/FCM_Master_Functions.sbs"
			],
			[
				"dbfacade.h",
				"C_Application/SC_OAM/SWM_SoftwareManagement/src/include/SWM_SoftwareManagement/DbFacade.h"
			],
			[
				"linking.cma",
				"C_Application/SC_OAM/CMake/Linking.cmake"
			],
			[
				"linki",
				"C_Application/SC_OAM/Makefiles/Linking.mak"
			],
			[
				"configure.b",
				"C_Application/SC_OAM/configure.bat"
			],
			[
				"c_test.cmake",
				"C_Application/SC_OAM/CMake/C_Test/C_Test.cmake"
			],
			[
				"c_test.cm",
				"C_Application/SC_OAM/CMake/C_Test/C_Test.cmake"
			],
			[
				"ctest.cm",
				"C_Application/SC_OAM/CMake/C_Test/C_Test.cmake"
			],
			[
				"configur",
				"C_Application/SC_OAM/configure.bat"
			],
			[
				"configu",
				"C_Application/SC_OAM/configure"
			],
			[
				"config",
				"C_Application/SC_OAM/configure"
			],
			[
				"rkaround/cmakelists.txt",
				"C_Test/SC_OAM/MT_COMMONS/original_boost_mt_core/CMake/SSW/SSW_WORKAROUND/CMakeLists.txt"
			],
			[
				"cmake",
				"C_Application/SC_OAM/CMakeLists.txt"
			],
			[
				"casncmakeli",
				"C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/tools/casn/CMakeLists.txt"
			],
			[
				"cmakeca",
				"C_Application/SC_OAM/output-FCMD-ppc-OSE/CMakeCache.txt"
			],
			[
				"linux",
				"C_Application/SC_OAM/CMake/linux-gcc-mips.cmake"
			],
			[
				"depl",
				"C_Application/SC_OAM/CMake/Deployment.cmake"
			],
			[
				"linkingcmak",
				"C_Application/SC_OAM/CMake/Linking.cmake"
			],
			[
				"cmake/linux-gcc-mips.cmake",
				"C_Application/SC_OAM/CMake/linux-gcc-mips.cmake"
			],
			[
				"pportsoftware/src/oxframework/src/oxf/omtimeout.h",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/src/oxf/OMTimeout.h"
			],
			[
				"rhapsody",
				"C_Application/SC_OAM/CMake/ExternalTools/Rhapsody.cmake"
			],
			[
				"faultliteralarray.ipp",
				"C_Application/SC_OAM/include/definitions/FaultLiteralArray.ipp"
			],
			[
				"dm_fsmcmakeli",
				"C_Application/SC_OAM/DM_FSM/CMakeLists.txt"
			],
			[
				"cliccmakeli",
				"C_Application/SC_OAM/CLIC_ClimateControl/CMakeLists.txt"
			],
			[
				"clickcmakeli",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/CMakeLists.txt"
			],
			[
				"asngenericcmakeli",
				"C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/CMakeLists.txt"
			],
			[
				"asngeen/cmakeli",
				"C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/tools/casn/CMakeLists.txt"
			],
			[
				"linux-",
				"C_Application/SC_OAM/CMake/linux-gcc-mips.cmake"
			],
			[
				"sswsuppcmakeli",
				"C_Application/SC_OAM/SSW_SupportSoftware/CMakeLists.txt"
			],
			[
				"sswcmakeli",
				"C_Application/SC_OAM/SYSM_WCDMA/CMakeLists.txt"
			],
			[
				"asngenecmake",
				"C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/CMakeLists.txt"
			],
			[
				"dmcommoncmakeli",
				"C_Application/SC_OAM/DM_Common/CMakeLists.txt"
			],
			[
				"sysmsystemcmakeli",
				"C_Application/SC_OAM/SYSM_SystemManagement/CMakeLists.txt"
			],
			[
				"sdk.in",
				"C_Application/SC_OAM/Makefiles/SDK.in"
			],
			[
				"jenkin",
				"C_Test/SC_OAM/UT_COMMONS/jenkins.sh"
			],
			[
				"sysmsyscmake",
				"C_Application/SC_OAM/SYSM_SystemManagement/CMakeLists.txt"
			],
			[
				"cmak",
				"C_Application/SC_OAM/CMakeLists.txt"
			],
			[
				"jenkins.sh",
				"C_Test/SC_OAM/UT_COMMONS/jenkins.sh"
			],
			[
				"sysmcmake",
				"C_Application/SC_OAM/SYSM_SystemManagement/CMakeLists.txt"
			],
			[
				"sysmcmae",
				"C_Application/SC_OAM/SYSM_SystemManagement/CMakeLists.txt"
			],
			[
				"gcc-",
				"C_Application/SC_OAM/CMake/linux-gcc-mips.cmake"
			],
			[
				"rea",
				"C_Application/SC_OAM/CMake/README.md"
			],
			[
				"bbccmakeli",
				"C_Application/SC_OAM/BBC_BasebandBusConfiguration/CMakeLists.txt"
			],
			[
				"cliccmake",
				"C_Application/SC_OAM/CLIC_ClimateControl/CMakeLists.txt"
			],
			[
				"clickcmakelis",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/CMakeLists.txt"
			],
			[
				"dmfsmbtsom",
				"C_Application/SC_OAM/DM_FSM/src/LinuxMIPS_WN_FCT/BTSOM_main.cpp"
			],
			[
				"dmfsmcmakeli",
				"C_Application/SC_OAM/DM_FSM/CMakeLists.txt"
			],
			[
				"read",
				"C_Application/SC_OAM/CMake/README.md"
			],
			[
				"conf",
				"C_Application/SC_OAM/configure.bat"
			],
			[
				"con",
				"C_Application/SC_OAM/configure"
			],
			[
				"paths",
				"C_Application/SC_OAM/CMake/Paths.cmake"
			],
			[
				"enmake",
				"C_Application/SC_OAM/enmake.bat"
			],
			[
				"enma",
				"C_Application/SC_OAM/enmake.bat"
			],
			[
				"ecl",
				"C_Application/SC_OAM/conf/ECL_OAM"
			],
			[
				"oam",
				"C_Application/SC_OAM/CMake/OAM.cmake"
			],
			[
				"fm_faulcmakeli",
				"C_Application/SC_OAM/FM_FaultManagement/CMakeLists.txt"
			],
			[
				"defin",
				"C_Application/SC_OAM/CMake/Definitions.cmake"
			],
			[
				"setenv",
				"C_Application/SC_OAM/setenv.env"
			],
			[
				"rhaps",
				"C_Application/SC_OAM/CMake/ExternalTools/Rhapsody.cmake"
			],
			[
				"inclue",
				"C_Application/SC_OAM/CMake/IncludeDirectories.cmake"
			],
			[
				"ose-diab-ppc.cmake",
				"C_Application/SC_OAM/CMake/ose-diab-ppc.cmake"
			],
			[
				"diab.cmake",
				"C_Application/SC_OAM/CMake/ose-diab-ppc.cmake"
			],
			[
				"include",
				"C_Application/SC_OAM/CMake/IncludeDirectories.cmake"
			],
			[
				"cpsb",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/src/Cpsb.c"
			],
			[
				"cptaskcmake",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/CMakeLists.txt"
			],
			[
				"path",
				"C_Application/SC_OAM/CMake/Paths.cmake"
			],
			[
				"spm_proxy.h",
				"C_Application/SC_OAM/SPM_SignalProcessingManagement/src/LinuxPPC_WN_FCMD/SPM_Proxy.h"
			],
			[
				"sswsupportcmakeli",
				"C_Application/SC_OAM/SSW_SupportSoftware/CMakeLists.txt"
			],
			[
				"oxframecmakeli",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/CMakeLists.txt"
			],
			[
				"oxframecmake",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/OXFramework/CMakeLists.txt"
			],
			[
				"",
				"C_Application/SC_OAM/CMake/ExternalTools/Rhapsody.cmake"
			],
			[
				"swmcmakeli",
				"C_Application/SC_OAM/SWM_SoftwareManagement/CMakeLists.txt"
			],
			[
				"asngenericcmakelis",
				"C_Application/SC_OAM/SIM_SystemInterfaceManagement/src/ASNGeneric/CMakeLists.txt"
			],
			[
				"sdk",
				"C_Application/SC_OAM/Makefiles/SDK.in"
			],
			[
				".rpy",
				"C_Application/SC_OAM/DM_FSM/DM_FSM.rpy"
			],
			[
				"linu",
				"C_Application/SC_OAM/CMake/linux-gcc-mips.cmake"
			],
			[
				"includ",
				"C_Application/SC_OAM/CMake/IncludeDirectories.cmake"
			],
			[
				"swmcmake",
				"C_Application/SC_OAM/SWM_SoftwareManagement/CMakeLists.txt"
			],
			[
				"trcmakeli",
				"C_Application/SC_OAM/TR_TechnicalReporting/CMakeLists.txt"
			],
			[
				"lmliccmakeli",
				"C_Application/SC_OAM/LM_LicenceManagement/CMakeLists.txt"
			],
			[
				"trechcmakeli",
				"C_Application/SC_OAM/TR_TechnicalReporting/CMakeLists.txt"
			],
			[
				"ramlcmake",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/RAML/CMakeLists.txt"
			],
			[
				"loggercmake",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/Logger/CMakeLists.txt"
			],
			[
				"paths.c",
				"C_Application/SC_OAM/CMake/Paths.cmake"
			],
			[
				"trtechnicacmakel",
				"C_Application/SC_OAM/TR_TechnicalReporting/CMakeLists.txt"
			],
			[
				"cpsb.c",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/src/Cpsb.c"
			],
			[
				"cpcontrol.c",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/src/CPControl.c"
			],
			[
				"cptask/src/cpcontrol.c",
				"C_Application/SC_OAM/SSW_SupportSoftware/src/CPTask/src/CPControl.c"
			],
			[
				"linuxmips_wn_fct/cfaradaydspmemorydump.cpp",
				"C_Application/SC_OAM/TR_TechnicalReporting/src/LinuxMIPS_WN_FCT/CFaradayDspMemoryDump.cpp"
			],
			[
				"lnux",
				"C_Application/SC_OAM/CMake/linux-gcc-mips.cmake"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/home/skoblins/Documents/UT/TDD-theory&tasks.sublime-project"
			],
			[
				"tem",
				"/var/git/WCDMA/C_Test/SC_OAM/TM_TestManagement/UT/CMake/UT_TestMAnagement.sublime-project"
			],
			[
				"te",
				"/var/git/WCDMA/C_Test/SC_OAM/TM_TestManagement/UT/CMake/UT_TestMAnagement.sublime-project"
			],
			[
				"test",
				"/var/git/WCDMA/C_Test/SC_OAM/TM_TestManagement/UT/CMake/UT_TestMAnagement.sublime-project"
			],
			[
				"WCD",
				"/home/skoblins/workspace/WCDMA/C_Application/SC_OAM/output/WCDMA.sublime-project"
			],
			[
				"syste",
				"/home/skoblins/SystemSettings.sublime-project"
			],
			[
				"ran",
				"/home/skoblins/workspace/ran2111/C_Test/SC_OAM/DM_ALMAG/UT/output/ALMAG_UT_ran2111.sublime-project"
			],
			[
				"Syste",
				"/home/skoblins/workspace/BuildSystemAdjustment/BuildSystemAdjstment.sublime-project"
			],
			[
				"TR",
				"/home/skoblins/workspace/WCDMA/C_Test/SC_OAM/TR_TechnicalReporting/UT/CMake/output/UT_TechnicalReporting.sublime-project"
			],
			[
				"fou",
				"/home/skoblins/workspace/WCDMA/C_Test/TestDoubles/C_Application/SC_OAM/FoundationModel/output/FML.sublime-project"
			],
			[
				"tech",
				"/home/skoblins/workspace/WCDMA/C_Test/SC_OAM/TR_TechnicalReporting/UT/output/UT_TechReporting.sublime-project"
			],
			[
				"techr",
				"/home/skoblins/workspace/WCDMA/C_Test/SC_OAM/TR_TechnicalReporting/UT/output/UT_TechReporting.sublime-project"
			],
			[
				"Tech",
				"/home/skoblins/workspace/WCDMA/C_Test/SC_OAM/TR_TechnicalReporting/UT/output/UT_TechReporting.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 319.0,
	"status_bar_visible": true
}
