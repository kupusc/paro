cmake_minimum_required (VERSION 2.8)

# Usage:
# add_custom_target( GenerateFML
#    COMMAND ${CMAKE_COMMAND} 
#        -D PRP_path=${OAM_ROOT}/OamSw.prp 
#        -D RPY_path=${FML_dir}/FoundationModel.rpy
#        -D COMPONENT=WN_FCMD_BOSSE
#        -D CONFIGURATION=WinPcVisualBE
#        -P ${CoreTestFramework_dir}/CMake/rhapsodygenerator.cmake)

MESSAGE("PRP_path = ${PRP_path}")

if(EXISTS "c:/APPS/Rhapsody75/RhapsodyCL.exe")
    set(RHAPSODYCL_EXE "c:/APPS/Rhapsody75/RhapsodyCL.exe")
endif()

if(EXISTS "c:/APPS/Rhapsody_7521/RhapsodyCL.exe")
    set(RHAPSODYCL_EXE "c:/APPS/Rhapsody_7521/RhapsodyCL.exe")
endif()

if(NOT DEFINED RHAPSODYCL_EXE)
    message(FATAL_ERROR "Could not find RhapsodyCL.exe")
endif()

set(ENV{PROJECT_PRP_FILE_PATH} ${PRP_path})

execute_process(
    COMMAND ${RHAPSODYCL_EXE} -cmd=open "${RPY_path}" -cmd=setcomponent ${COMPONENT} -cmd=setconfiguration ${CONFIGURATION} -cmd=generate -cmd=exit
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE ov
    ERROR_VARIABLE ev
    RESULT_VARIABLE rv)

if("-1" EQUAL ${rv})
    message(FATAL_ERROR "Rhapsody (${RHAPSODYCL_EXE}) exited with error: ${rv} Error stream: ${ev} Output stream: ${ov}")
    #possible reasons:
    #  - when both error and output empty: you are not connected to company's network (so Rhapsody couldn't find its licence)
endif()